import { ENV } from '../config.js';
import crypto from 'crypto';
import axios from 'axios';
import https from 'https'




//Generate the phishing link to be embedded in the email.
export function genPhishLink() {
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
  let link = '';

  // Generate random bytes
  const randomBytes = crypto.randomBytes(20);

  for (let i = 0; i < 20; i++) {
    const index = randomBytes[i] % characters.length;
    link += characters.charAt(index);
  }


  const index = Math.floor(Math.random() * 15) + 1;


  //Embed '700r' in the link. This is how I identify a phish link.
  //index + 4, since 700r is 4 characters long.
  return `${link.substring(0, index)}700r${link.substring(index + 4)}`

}


//Checks if a link was generated by the genPhishLink
export function isPhishLink(link) {
  if (link.includes('700r')) return true

  return false;
}



export async function login(email, pwd) {
  const AGENT = new https.Agent({ rejectUnauthorized: false });

  const api = ENV;
  const payload = {
    username : email,
    password : pwd
  };

  try {
    const res = await axios.post(`${api}/login`, payload, { httpsAgent: AGENT });

    if (res.data.message === "Login successfully") return {valid : true, response : res.data};

    return {valid: false, response: res.data};

  } catch (error) {
    //check if the error was raised from aurison api
    if (error.response && error.response.data.error_log === "Invalid username or password!!") {
      return {valid : false, response : error.response.data};
    }

    console.error(error);
  }
}
